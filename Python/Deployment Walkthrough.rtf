{\rtf1\ansi\ansicpg1252\cocoartf1504
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red38\green38\blue38;\red242\green242\blue242;
\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;\cssrgb\c0\c0\c0;\cssrgb\c20000\c20000\c20000;\cssrgb\c96078\c96078\c96078;
\csgray\c100000;}
\margl1440\margr1440\vieww20940\viewh14720\viewkind0
\deftab720
\pard\pardeftab720\sl400\partightenfactor0

\f0\b\fs33 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 On your local machine\
\
\pard\pardeftab720\sl400\partightenfactor0

\b0 \cf2 \ulnone 2. Make your .gitignore (in the topmost folder within your project)\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 touch .gitignore\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
3. Inside .gitignore\'85\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4   *.pyc\
  venv/\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
4. Make your requirements.txt\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 pip freeze > requirements.txt
\f0\fs33 \cf2 \cb5 \
\pard\pardeftab720\sl400\partightenfactor0
\cf0 \
\pard\pardeftab720\sl400\partightenfactor0
\cf2 1.\cf0  \cf2 Make your git repo\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 git init\
git add --all\
git commit -m "initial commit"\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
5.\cf0  \cf2 Push your project up to a remote repo\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 git remote add origin https://github.com/\{\{github username\}\}/\{\{repo name\}\}.git\
git push origin master\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
\
\
\pard\pardeftab720\sl400\partightenfactor0

\b \cf2 \ul On your virtual machine
\b0 \ulnone \
\
1.\cf0  \cf2 From your root folder, git clone your new project\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 git clone https://github.com/\{\{github username\}\}/\{\{repo name\}\}.git\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
2.\cf0  \cf2 Inside of your new project, create a new virtual environment\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 virtualenv venv\
source venv/bin/activate\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
3.\cf0  \cf2 Inside the virtual environment, pip install requirements.txt\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 pip install -r requirements.txt\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
4.\cf0  I\cf2 nstall django-extensions, bcrypt, and gunicorn\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 pip install django bcrypt django-extensions\
pip install gunicorn\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
5.\cf0  \cf2 Edit your settings.py file as needed and run collectstatic\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 # Inside settings.py\
# modify these lines\
DEBUG = False\
ALLOWED_HOSTS = ['\{\{yourEC2.public.ip\}\}']\
# add the line below to the bottom of the file\
STATIC_ROOT = os.path.join(BASE_DIR, "static/")\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf0 \cb5 \
6. After using \'93cd ..\'94 to get back to manage.py, run the following command and respond with \'93yes\'94: \
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 python manage.py collectstatic\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
7. Deactivate virtual environment\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 deactivate\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
7. Get into your gunicorn file:\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 sudo vim /etc/systemd/system/gunicorn.service\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
8.\cf0  \cf2 In your gunicorn.conf file, change the paths to your current project as needed\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 [Unit]\
Description=gunicorn daemon\
After=network.target\
[Service]\
User=ubuntu\
Group=www-data\
WorkingDirectory=/home/ubuntu/\{\{repoName\}\}\
ExecStart=/home/ubuntu/\{\{repoName\}\}/venv/bin/gunicorn --workers 3 --bind unix:/home/ubuntu/\{\{repoName\}\}/\{\{projectName\}\}.sock \{\{projectName\}\}.wsgi:application\
[Install]\
WantedBy=multi-user.target
\f0\fs33 \cf0 \cb5 \
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \
7.\cf0  \cf2 Reload gunicorn with sudo systemctl daemon-reload\cf0  \cf2 and restart it with sudo system restart gunicorn\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 sudo systemctl daemon-reload\
sudo systemctl start gunicorn\
sudo systemctl enable gunicorn\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf0 \cb5 \
\pard\pardeftab720\sl400\partightenfactor0
\cf2 8.\cf0  \cf2 Create a new sites available file for this project\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 sudo vim /etc/nginx/sites-available/\{\{projectName\}\}\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf0 \cb5 \
9. In your new sites available file:\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 server \{\
  listen 80;\
  server_name \{\{yourPublicIP\}\};\
  location = /favicon.ico \{ access_log off; log_not_found off; \}\
  location /static/ \{\
      root /home/ubuntu/\{\{myRepoName\}\};\
  \}\
  location / \{\
      include proxy_params;\
      proxy_pass http://unix:/home/ubuntu/\{\{myRepoName\}\}/\{\{projectName\}\}.sock;\
  \}\
\}\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf0 \cb5 \
\pard\pardeftab720\sl400\partightenfactor0
\cf2 9.\cf0  \cf2 Navigate to sites-enabled\cf0 \
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 cd /etc/nginx/sites-enabled\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
10. Remove your old project\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 sudo rm \{\{old_project\}\}
\f0\fs33 \cf2 \cb5 \
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \
10.\cf0  \cf2 Run this line for your new project: \
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 sudo ln -s /etc/nginx/sites-available/\{\{projectName\}\} /etc/nginx/sites-enabled\
\pard\tx12035\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf0 \cb5 \
\pard\pardeftab720\sl400\partightenfactor0
\cf2 11.\cf0  \cf2 Check that the only file in sites is your new file\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 ls\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs33 \cf2 \cb5 \
12.\cf0  \cf2 Restart nginx\cf0 \
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 sudo service nginx restart\
\pard\pardeftab720\sl340\partightenfactor0

\f0\fs33 \cf0 \cb5 \
13. NOTE: May have to stop gunicorn and reload and such; verify that .sock is in the same folder as your manage.py file
\f1\fs24 \cf3 \cb4 \
sudo systemctl daemon-reload\
sudo systemctl stop gunicorn\
sudo systemctl start gunicorn\
sudo systemctl enable gunicorn\

\f0\fs33 \cf0 \cb5 \
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs24 \cf3 \cb4 \
}